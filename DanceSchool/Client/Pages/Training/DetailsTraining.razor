@page "/training/{trainingId:int}"
@inject HttpClient http
@inject NavigationManager uriHelper
@inject IJSRuntime js
<h3>Szczegóły: </h3>

@if(training == null)
{
    <div class="spinner">Ladowanie danych....</div>
}
else { 
<div class="form-group">
    <div class="form-text">
        <h6 class="oi-align-left font-weight-bold">
            Nazwa kursu:
        </h6>
        <p class="align-content-center">
            @training.Name
        </p>
        <br />

        <h6 class="oi-align-left font-weight-bold">
            Trener:
        </h6>
        <p class="align-content-center">
            @training.CoachId
        </p>
        <br />

        <h6 class="oi-align-left font-weight-bold">
            Liczba dostępnych miejsc:
        </h6>
        <p class="align-content-center">
            Maksymalna liczba osób @training.NumberOfParticipants
        </p>
        <br />

        <h6 class="oi-align-left font-weight-bold">
            Cena kursu:
        </h6>
        <p class="align-content-center">
            @training.Price
        </p>
        <br />

        <h6 class="oi-align-left font-weight-bold">
            Data pierwszych zajęć:
        </h6>
        <p class="align-content-center">
            @training.FirstLessonDate.ToString("dd.MM.yyyy"). Kolejne zajęcia odbywają się co tydzień.
        </p>
        <br />
    </div>

</div>
}

@code {
    [Parameter] public int trainingId { get; set; }
    Training training { get; set; }
    protected async override Task OnParametersSetAsync()
    {
        training = await http.GetFromJsonAsync<Training>($"api/training/{trainingId}");
    }
}
